<?xml version="1.0" encoding="UTF-8"?>
<?NLS type="org.eclipse.help.contexts"?>

<contexts>
	<!-- Eclipse Validation preferences -->
<context id="jvgp0000">
<description>The validation preferences page allows you to view or change the default validation settings for all workbench projects. A validator is a tool that checks that resources conform to a specification, DTD, or some other set of rules.

Each validator can apply to certain types of files, certain project natures, and certain project facets. When a validator applies to a project facet or nature, the workbench uses that validator only on projects that have that facet or nature. Likewise, most validators apply only to certain types of files, so the workbench uses those validators only on those types of files.

Select the <b>Allow projects to override these preference settings</b> check box if you want to allow individual projects to set their own validation preferences. To configure new validation settings for an individual project, select the project in the Navigator view, right-click and select <b>Properties</b> &gt; <b>Validation</b>.

Select the <b>Suspend all validators</b> check box to prevent validation at the global level.

Select the <b>Save all modified resources automatically prior to validating</b> check box if you want to save any resources you have modified before the validation begins.

In the list of validators, select the check boxes next to each validator you want to use at the global level. Each validator has a check box to specify whether it is used on manual validation or on build validation. Choose an alternate implementation for a validator or update it's detailed settings by clicking the button in the <b>Settings</b> column. Not all validators have detailed settings.

</description>
<topic href="../org.eclipse.jst.j2ee.doc.user/topics/tjval.html" label="Validating code in enterprise applications"/>
<topic href="../org.eclipse.jst.j2ee.doc.user/topics/tjvalglobalpref.html" label="Overriding global validation preferences"/>
<topic href="../org.eclipse.jst.j2ee.doc.user/topics/rvalerr.html" label="Common validation errors and solutions"/>
</context>

<context id="jvgp0100">
<description>The New Filter Rule dialog adds a new rule to either an Include Group or an Exclude Group. There are several types of rules:

<b>File extension</b> - A rule that is only concerned with matching file extensions, for example html for HTML files or xml for XML files.

<b>Folder or file name</b> - A rule for matching folder or file names. These names are relative to a project.

<b>Project nature</b> - The next page shows a drop down list of all the known project natures.

<b>Facet</b> - Typically this would only be used by advanced or internal users, as you would need to know the internal facet ids.

<b>Content Type</b> - The next page will show a drop down list of all the known content types. Content types are more powerful than file extensions, but also slower to match at runtime.
</description>
</context>

<context id="jvgp0101">
<description>A rule for matching file extensions. The file can be located anywhere in the project.
</description>
</context>

<context id="jvgp0102">
<description>Folder or file names. You can either use File or Folder browsers, or type in a name directly. These names are relative to a project. 

If you select a file or folder that is outside of the scope of a project, the rule will not be activated.

For files you can match on either simple names, or qualified names. For example matching on the simple name "product.xml", will match the file in any directory. However, matching on the qualified name "WEB-INF/product.xml" will only match the file in the WEB-INF directory. 
</description>
</context>

<context id="jvgp0103">
<description>This is a list of the registered Project natures.
</description>
</context>

<context id="jvgp0104">
<description>The internal facet id is specified here. Since you need to know internal ids this setting is typically not used by end users. 
</description>
</context>

<context id="jvgp0105">
<description>A list of all the registered Content Types. Content types are more powerful than using file extensions or file names, as they can use the content of the file to more precisely define it's type. However, they require more computer resources to calculate.

Content types form hierarchies, you can specify whether you require an exact match, or whether subtypes in the hierarchy should match as well.
</description>
</context>
</contexts>