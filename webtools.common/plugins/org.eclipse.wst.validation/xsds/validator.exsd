<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.wst.validation">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.wst.validation" id="validator-v2" name="Validator"/>
      </appInfo>
      <documentation>
         All validators that wish to use version 2 of the validation framework need to extend this extension point.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="validator"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A short id that is unique within the plug-in, so that this validator can be identified.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The short user friendly name of the validator.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="validator">
      <complexType>
         <sequence>
            <element ref="include" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="exclude" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements the validator.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.wst.validation.ValidatorBase"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="build" type="boolean">
            <annotation>
               <documentation>
                  Is this validator enabled by default for build based validations? The default is true.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="manual" type="boolean">
            <annotation>
               <documentation>
                  Is this validator enabled by default for manual based validations? The default is true.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="version" type="string">
            <annotation>
               <documentation>
                  The version of the definition. It is a simple integer. If not specified the version is assumed to be 1.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="sourceid" type="string">
            <annotation>
               <documentation>
                  If this validator also serves as an as-you-type validator (also know as an ISourceValidator) then it&apos;s source id is specified here, so that the two validators can be associated with one another.
By source id, we mean the id that is used in the org.eclipse.wst.sse.ui.sourceValidation extension point
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="include">
      <annotation>
         <documentation>
            This contains a set of inclusion rules, which are used in filtering which resources get validated. At least one of these rules must be satisfied in order for the validator to be called on the particular resource.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="rules"/>
         </sequence>
      </complexType>
   </element>

   <element name="exclude">
      <annotation>
         <documentation>
            This contains a set of exclusion rules, used in filtering which resources get validated. If any of these rules are matched, then the validator is not called on this resource.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="rules"/>
         </sequence>
      </complexType>
   </element>

   <element name="fileext">
      <annotation>
         <documentation>
            A file extension, for example html.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="ext" type="string" use="required">
            <annotation>
               <documentation>
                  The file extension, for example html.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="caseSensitive" type="boolean">
            <annotation>
               <documentation>
                  If the file extension is case sensitive, then this needs to be set to true.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="projectNature">
      <annotation>
         <documentation>
            Used to filter on project natures.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified project nature id, for example &quot;org.eclipse.jdt.core.javanature&quot;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="file">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The file or folder name. The file name can be fully qualified, that is it starts with a leading slash (&quot;/&quot;), or it can be a relative name. Folder names are separated with the forward slash (&quot;/&quot;) character.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="caseSensitive" type="boolean">
            <annotation>
               <documentation>
                  If the file name is not case senstitive, then this needs to be set to false.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  Type of name, there are three choices. &lt;ul&gt;&lt;li&gt;folder - specifies a project relative folder name.&lt;/li&gt;&lt;li&gt;file - a simple file name (i.e. no path information).&lt;/li&gt;&lt;li&gt;full - a fully qualified (project relative) file name.&lt;/li&gt;&lt;/ul&gt;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="rules">
      <annotation>
         <documentation>
            A set of rules for determining if a resource is passed to this validator or not. The rules are OR&apos;ed together.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="fileext" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="file" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="projectNature" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="facet" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="contentType" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="facet">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The facet id.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="contentType">
      <annotation>
         <documentation>
            Used to filter based on content types.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The content type id.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         WebTools 2.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;!-- A validator that will be called on resources that have html or htm file extensions. --&gt;
   &lt;extension
         point=&quot;org.eclipse.wst.validation.validator&quot;
         id=&quot;Test&quot; name=&quot;%Validator.Name&quot;&gt;
      &lt;validator
            class=&quot;org.eclipse.wst.validation.test.TestValidator&quot;&gt;
         &lt;include&gt;
            &lt;rules&gt;
               &lt;fileext ext=&quot;html&quot;/&gt;
               &lt;fileext ext=&quot;htm&quot;/&gt;
            &lt;/rules&gt;
         &lt;/include&gt;
      &lt;/validator&gt;
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Provisional API.
      </documentation>
   </annotation>



</schema>
